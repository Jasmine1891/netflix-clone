{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\netflixclone\\\\src\\\\components\\\\rowPost\\\\RowPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './RowPost.css';\nimport axios from '../../axios';\nimport { imageUrl, API_KEY } from '../../constants/constants';\nimport YouTube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RowPost(props) {\n  _s();\n\n  const [movies, setmovies] = useState([]);\n  useEffect(() => {\n    axios.get(props.url).then(response => {\n      console.log(response.data);\n      setmovies(response.data.results);\n    }).catch(err => {\n      alert('Network Error');\n    });\n  }, []);\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0\n    }\n  };\n\n  const handleMovie = id => {\n    console.log(id);\n    axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then(response => {\n      console.log(response.data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleMovie(movie.id),\n        alt: \"poster\",\n        className: props.isSmall ? 'smallPoster' : 'poster',\n        src: `${imageUrl + movie.backdrop_path}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: \"2g811Eo7K8U\",\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RowPost, \"MAdrXVcd66oyPMrmkShA7uyB4/U=\");\n\n_c = RowPost;\nexport default RowPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"RowPost\");","map":{"version":3,"names":["React","useEffect","useState","axios","imageUrl","API_KEY","YouTube","RowPost","props","movies","setmovies","get","url","then","response","console","log","data","results","catch","err","alert","opts","height","width","playerVars","autoplay","handleMovie","id","title","map","movie","isSmall","backdrop_path"],"sources":["E:/React/netflixclone/src/components/rowPost/RowPost.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './RowPost.css'\r\nimport axios from '../../axios'\r\nimport {imageUrl,API_KEY} from '../../constants/constants'\r\nimport YouTube from 'react-youtube'\r\n\r\nfunction RowPost(props) {\r\n  const [movies, setmovies] = useState([])\r\n  useEffect(() => {\r\n    axios.get(props.url)\r\n    .then((response)=>{\r\n      console.log(response.data)\r\n      setmovies(response.data.results)\r\n    })\r\n    .catch((err)=>{\r\n      alert('Network Error')\r\n    })\r\n   \r\n  },[])\r\n\r\n  const opts = {\r\n    height: '390',\r\n    width: '100%',\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 0,\r\n    },\r\n  };\r\n\r\n  const handleMovie=(id)=>{\r\n    console.log(id);\r\n    axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`)\r\n    .then((response)=>{\r\n      console.log(response.data)\r\n    })\r\n  }\r\n  \r\n  return (\r\n    <div className='row'>\r\n        <h2>{props.title}</h2>\r\n        <div className=\"posters\">\r\n          {\r\n            movies.map((movie)=>(\r\n              <img onClick={()=>handleMovie(movie.id)} alt='poster' className={props.isSmall ? 'smallPoster':'poster' }src={`${imageUrl+movie.backdrop_path}`}/>\r\n            ))\r\n\r\n          }\r\n           \r\n        </div>\r\n\r\n        <YouTube videoId=\"2g811Eo7K8U\" opts={opts} />;\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RowPost"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,QAAR,EAAiBC,OAAjB,QAA+B,2BAA/B;AACA,OAAOC,OAAP,MAAoB,eAApB;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EAAA;;EACtB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;EACAD,SAAS,CAAC,MAAM;IACdE,KAAK,CAACQ,GAAN,CAAUH,KAAK,CAACI,GAAhB,EACCC,IADD,CACOC,QAAD,IAAY;MAChBC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;MACAP,SAAS,CAACI,QAAQ,CAACG,IAAT,CAAcC,OAAf,CAAT;IACD,CAJD,EAKCC,KALD,CAKQC,GAAD,IAAO;MACZC,KAAK,CAAC,eAAD,CAAL;IACD,CAPD;EASD,CAVQ,EAUP,EAVO,CAAT;EAYA,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAE,KADG;IAEXC,KAAK,EAAE,MAFI;IAGXC,UAAU,EAAE;MACV;MACAC,QAAQ,EAAE;IAFA;EAHD,CAAb;;EASA,MAAMC,WAAW,GAAEC,EAAD,IAAM;IACtBb,OAAO,CAACC,GAAR,CAAYY,EAAZ;IACAzB,KAAK,CAACQ,GAAN,CAAW,UAASiB,EAAG,mBAAkBvB,OAAQ,iBAAjD,EACCQ,IADD,CACOC,QAAD,IAAY;MAChBC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;IACD,CAHD;EAID,CAND;;EAQA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACI;MAAA,UAAKT,KAAK,CAACqB;IAAX;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAC,SAAf;MAAA,UAEIpB,MAAM,CAACqB,GAAP,CAAYC,KAAD,iBACT;QAAK,OAAO,EAAE,MAAIJ,WAAW,CAACI,KAAK,CAACH,EAAP,CAA7B;QAAyC,GAAG,EAAC,QAA7C;QAAsD,SAAS,EAAEpB,KAAK,CAACwB,OAAN,GAAgB,aAAhB,GAA8B,QAA/F;QAAyG,GAAG,EAAG,GAAE5B,QAAQ,GAAC2B,KAAK,CAACE,aAAc;MAA9I;QAAA;QAAA;QAAA;MAAA,QADF;IAFJ;MAAA;MAAA;MAAA;IAAA,QAFJ,eAYI,QAAC,OAAD;MAAS,OAAO,EAAC,aAAjB;MAA+B,IAAI,EAAEX;IAArC;MAAA;MAAA;MAAA;IAAA,QAZJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD;;GAhDQf,O;;KAAAA,O;AAkDT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}